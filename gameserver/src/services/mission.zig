const std = @import("std");
const protocol = @import("protocol");
const CmdID = protocol.CmdID;
const Session = @import("../Session.zig");
const Packet = @import("../Packet.zig");
const Allocator = std.mem.Allocator;

const FinishedMainMissionIdList = [_]u32{
    1000101, 1000111, 1000112, 1000113, 1000114, 1000201, 1000202, 1000203, 1000204, 1000300,
    1000301, 1000302, 1000303, 1000304, 1000400, 1000401, 1000402, 1000410, 1000500, 1000501,
    1000502, 1000503, 1000504, 1000505, 1000510, 1000511, 1010001, 1010002, 1010101, 1010201,
    1010202, 1010203, 1010204, 1010205, 1010206, 1010301, 1010302, 1010303, 1010401, 1010405,
    1010402, 1010403, 1010500, 1010501, 1010502, 1010503, 1010601, 1010602, 1010700, 1010701,
    1010801, 1010802, 1010901, 1010902, 1011001, 1011002, 1011003, 1011100, 1011101, 1011102,
    1011103, 1011201, 1011202, 1011301, 1011400, 1011401, 1011402, 1011403, 1011501, 1011502,
    1011503, 1020101, 1020201, 1020302, 1020301, 1020400, 1020401, 1020402, 1020403, 1020501,
    1020601, 1020701, 1020702, 1020801, 1020901, 1021001, 1021101, 1021201, 1021301, 1021401,
    1021501, 1021601, 2000001, 2000002, 2000003, 2000004, 2000100, 2000101, 2000131, 2000132,
    2000133, 2000110, 2000111, 2000301, 2000103, 2000112, 2000108, 2000104, 2000102, 2000105,
    2000106, 2000107, 2000313, 2000314, 2000109, 2000113, 2000116, 2000118, 2000119, 2000120,
    2000122, 2000302, 2000303, 2000304, 2000305, 2000310, 2000311, 2000312, 2000320, 2000701,
    2000702, 2000703, 2000704, 2000705, 2000706, 2000707, 2010005, 2010301, 2010302, 2011103,
    2011104, 2011409, 2010401, 2010402, 2010405, 2010502, 2010503, 2010701, 2010708, 2010709,
    2010720, 2010730, 2010731, 2010732, 2010733, 2010734, 2010735, 2010904, 2011101, 2011102,
    2011105, 2011301, 2011302, 2011303, 2011501, 2011502, 2010909, 2010910, 2011901, 2011902,
    2011903, 2011904, 2011905, 2011906, 2020301, 2020302, 2020304, 2020316, 2020317, 2020318,
    2020319, 2020401, 2020402, 2020403, 2020404, 2020405, 2020406, 2020407, 2020303, 2020103,
    2020104, 2020105, 2020106, 2020107, 2020108, 2020109, 2020110, 2020201, 2020202, 2020203,
    2020204, 2000201, 2000202, 2000203, 2000204, 2000205, 2000206, 2000207, 2000208, 2000209,
    2000211, 2000212, 2010500, 2010501, 2010705, 2010706, 2010901, 2010902, 2010903, 2010702,
    2010703, 2011400, 2011401, 2011406, 2011402, 2011403, 2011404, 2011405, 2011407, 2011408,
    2011410, 2010905, 2010906, 2010907, 2010908, 2010911, 2010912, 2020305, 2020306, 2020309,
    2020307, 2020308, 2020701, 2020702, 2020313, 2020314, 2020315, 6020101, 6020201, 6020202,
    2020801, 2020802, 2020901, 2021601, 2021602, 3000201, 3000202, 3000203, 3000211, 3000212,
    3000213, 3000301, 3000302, 3000303, 3000522, 3000523, 3000524, 3000525, 3000526, 3000527,
    3000601, 3000602, 3000603, 3000604, 3000701, 3000702, 3000703, 3000704, 3000705, 3000800,
    3000801, 3000802, 3000803, 3010102, 3010103, 3010104, 3010105, 3010201, 3010202, 3010203,
    3010204, 3010205, 3011011, 3011012, 3011013, 3011014, 3011111, 3011112, 3011113, 3011114,
    3011201, 3011202, 3011203, 3011204, 3011205, 3011206, 3011207, 3011208, 3011401, 3011402,
    3011403, 3011404, 3011405, 3011406, 3011407, 3011408, 3011501, 3011502, 3011503, 3011504,
    3011505, 3011601, 3011602, 3011603, 3011604, 3011605, 3011606, 3011607, 3011608, 3011609,
    3011610, 3012001, 4020101, 4020102, 4020103, 4020104, 4020105, 4020106, 4020107, 4020108,
    4020109, 4020110, 4020111, 4020112, 4020113, 4020114, 4010105, 4010106, 4010107, 4010112,
    4010113, 4010131, 4010115, 4010116, 4010121, 4010122, 4010123, 4010124, 4010125, 4010126,
    4010127, 4010128, 4010133, 4010134, 4010135, 4010130, 4010136, 4010137, 4015101, 4015103,
    4015102, 4015202, 4015203, 4015204, 4015301, 4015302, 4015303, 4030001, 4030002, 4030003,
    4030004, 4030006, 4030007, 4030009, 4030010, 4040001, 4040002, 4040003, 4040004, 4040005,
    4040006, 4040052, 4040007, 4040008, 4040051, 4040009, 4040010, 4040011, 4040012, 4040053,
    4040014, 4040015, 4040017, 4040018, 4040019, 4040020, 4040021, 4040022, 4040023, 4040024,
    4040100, 4040189, 4040190, 4040101, 4040151, 4040154, 4040102, 4040103, 4040153, 4040104,
    4040152, 4040105, 4040106, 4040155, 4040107, 4040108, 4040109, 4040156, 4040157, 4040110,
    4040114, 4040115, 4040158, 4040159, 4040160, 4040161, 4040162, 4040116, 4040169, 4040163,
    4040164, 4040165, 4040166, 4040167, 4040168, 4040170, 4040171, 4040172, 4040173, 4040174,
    4040175, 4040176, 4040177, 4040178, 4040179, 4040180, 4040181, 4040182, 4040183, 4040184,
    4040185, 4040186, 4040117, 4040118, 4040119, 4040187, 4040120, 4040188, 4040121, 4040122,
    4040123, 4040124, 4040125, 4040126, 4040127, 4040128, 4040129, 4040130, 4040201, 4040202,
    4040203, 4040204, 4040205, 4040206, 4040207, 4040208, 4040290, 4040209, 4040210, 4040211,
    4040212, 4040213, 4040214, 4040215, 4040216, 4040217, 4040218, 4040219, 4040220, 4040221,
    4040222, 4040223, 4040224, 4040225, 4040226, 4040227, 4040228, 4040229, 4040230, 4040231,
    4040240, 4040241, 4040242, 4040244, 4040245, 4040246, 4040247, 4050005, 4050007, 4050008,
    4050009, 4050010, 4050011, 4050012, 4050013, 4050014, 4050015, 4050016, 4050017, 4050018,
    4050019, 4050020, 4050021, 4050022, 4050023, 4050024, 4050025, 4050026, 4050027, 4050028,
    4050029, 4050030, 4050031, 4050032, 4050033, 4050034, 4050035, 4050036, 4050037, 4072121,
    4072122, 4072123, 4071311, 4071312, 4071313, 4071320, 4071321, 4071322, 4122100, 4122101,
    4122102, 4122103, 4081311, 4081312, 4081313, 4081314, 4081315, 4081316, 4081317, 4081318,
    8000001, 8000002, 8000101, 8000102, 8000104, 8000105, 8000131, 8000132, 8000133, 8000134,
    8000135, 8000136, 8000137, 8000138, 8000139, 8000151, 8000152, 8000153, 8000154, 8000155,
    8000156, 8000157, 8000158, 8000159, 8000161, 8000162, 8000170, 8000171, 8000172, 8000173,
    8000174, 8000175, 8000177, 8000178, 8000180, 8000181, 8000183, 8000182, 8000185, 8000184,
    8000186, 8000187, 8000188, 8000189, 8000201, 8000202, 8000203, 8000204, 8001201, 8001202,
    8001203, 8001205, 8001206, 8001207, 8001208, 8001209, 8001211, 8001212, 8001213, 8001215,
    8001216, 8001219, 8001220, 8001223, 8001224, 8001225, 8001226, 8001227, 8001204, 8001210,
    8001214, 8001217, 8001218, 8001221, 8001222, 8001241, 8001242, 8001243, 8001244, 8001251,
    8001252, 8001253, 8001254, 8001255, 8001261, 8001262, 8001263, 8001264, 8001265, 8001266,
    8001267, 8001268, 8011401, 8002201, 8002202, 8002211, 8002212, 8002213, 8002214, 8002221,
    8002222, 8002231, 8002232, 8002233, 8002234, 8012101, 8012102, 8012103, 8012104, 8012105,
    8012106, 8012107, 8012401, 9999920,
};

pub fn onGetMissionStatus(session: *Session, packet: *const Packet, allocator: Allocator) !void {
    const req = try packet.getProto(protocol.GetMissionStatusCsReq, allocator);
    var rsp = protocol.GetMissionStatusScRsp.init(allocator);

    rsp.retcode = 0;
    for (req.sub_mission_id_list.items) |id| {
        try rsp.sub_mission_status_list.append(protocol.Mission{ .id = id, .status = protocol.MissionStatus.MISSION_FINISH, .progress = 1 });
    }

    for (req.mission_event_id_list.items) |id| {
        try rsp.mission_event_status_list.append(protocol.Mission{ .id = id, .status = protocol.MissionStatus.MISSION_FINISH, .progress = 1 });
    }

    try rsp.finished_main_mission_id_list.appendSlice(&FinishedMainMissionIdList);

    try session.send(CmdID.CmdGetMissionStatusScRsp, rsp);
}
